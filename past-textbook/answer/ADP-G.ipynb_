{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1wtXtpCoHLjjWmzAXiKX14N8Rnpe3Q7dm","timestamp":1682668981590}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# コード作成"],"metadata":{"id":"FOQQOY4FibTZ"}},{"cell_type":"markdown","source":["#### \n","の間にコードを記入します。<br>\n","問題文や解説などは本を参照してください。<p>\n","Longest Path<p>\n","問題文と提出先 https://atcoder.jp/contests/dp/tasks/dp_g<p>\n","よく使いそうな関数を、Toolsにまとめておきます。コンテスト前にファイルを作っておいて、入れておくと便利です。"],"metadata":{"id":"BcBvSpk-e8ph"}},{"cell_type":"code","execution_count":5,"metadata":{"id":"g80qW9jLeeZp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682669877478,"user_tz":-540,"elapsed":430,"user":{"displayName":"藤居月","userId":"11031315737247645685"}},"outputId":"5bce8daa-d45d-4682-aa43-5b1fa970430e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting atcoder.py\n"]}],"source":["%%writefile atcoder.py\n","from collections import deque\n","import sys\n","sys.setrecursionlimit(1000000)\n","\n","def in2ilist():\n","  return list(map(int,input().split()))\n","\n","\n","def make_edge(_n,_m,_directed=False,_margin=1):\n","  _e=[]\n","  for i in range(_n):\n","    _e.append([])\n","  for i in range(M):\n","    _u,_v = in2ilist()\n","    _e[_u-_margin].append(_v-_margin)\n","    if not _directed:\n","      _e[_v-_margin].append(_u-_margin)\n","  return _e\n","\n","\n","N,M = in2ilist()\n","e = make_edge(N,M,_directed=True)\n","done=[False]*N\n","length=[0]*N\n","\n","\n","def rec(i):\n","  if done[i]:\n","    return length[i]\n","  length[i]=0\n","  for j in e[i]:\n","    length[i]=max(length[i],rec(j)+1)\n","  done[i]=True\n","  return length[i]\n","\n","ans=0\n","for i in range(N):\n","  ans=max(ans,rec(i))\n","\n","print(ans)"]},{"cell_type":"markdown","source":["# 入力例1"],"metadata":{"id":"9KdD-lFogarh"}},{"cell_type":"code","source":["%%writefile test1\n","4 5\n","1 2\n","1 3\n","3 2\n","2 4\n","3 4"],"metadata":{"id":"bD-y3enXf6ch","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682669848051,"user_tz":-540,"elapsed":293,"user":{"displayName":"藤居月","userId":"11031315737247645685"}},"outputId":"bf5440f4-5cfb-476d-bb30-04b2c674140e"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing test1\n"]}]},{"cell_type":"code","source":["%cat test1 | python3 atcoder.py"],"metadata":{"id":"RQDv90kKf6kv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682669880105,"user_tz":-540,"elapsed":288,"user":{"displayName":"藤居月","userId":"11031315737247645685"}},"outputId":"09f47c2e-1a46-4339-81eb-20444d34a9aa"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"markdown","source":["3"],"metadata":{"id":"NY02MHdmhR5F"}},{"cell_type":"markdown","source":["# 入力例2"],"metadata":{"id":"JVS0imYphSBo"}},{"cell_type":"code","source":["%%writefile test2\n","6 3\n","2 3\n","4 5\n","5 6\n"],"metadata":{"id":"74lYOaCmhpKj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682669882533,"user_tz":-540,"elapsed":331,"user":{"displayName":"藤居月","userId":"11031315737247645685"}},"outputId":"9df8b277-620c-46e1-cb07-c5940cf8dddc"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing test2\n"]}]},{"cell_type":"code","source":["%cat test2 | python3 atcoder.py"],"metadata":{"id":"OJgQQDWbf6p4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682669884938,"user_tz":-540,"elapsed":407,"user":{"displayName":"藤居月","userId":"11031315737247645685"}},"outputId":"f973e6ae-7374-4fcd-8b12-25f68a92df2c"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n"]}]},{"cell_type":"markdown","source":["2"],"metadata":{"id":"UTW9cv9ehgBg"}},{"cell_type":"markdown","source":["# 入力例3"],"metadata":{"id":"ImLhamu73KZ7"}},{"cell_type":"code","source":["%%writefile test3\n","5 8\n","5 3\n","2 3\n","2 4\n","5 2\n","5 1\n","1 4\n","4 3\n","1 3\n"],"metadata":{"id":"Je-OseFJ3KaI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682669887153,"user_tz":-540,"elapsed":312,"user":{"displayName":"藤居月","userId":"11031315737247645685"}},"outputId":"0680f580-35a7-4a40-bfb7-5acad550074f"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing test3\n"]}]},{"cell_type":"code","source":["%cat test3 | python3 atcoder.py"],"metadata":{"id":"rwvELp3d3KaJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682669890573,"user_tz":-540,"elapsed":281,"user":{"displayName":"藤居月","userId":"11031315737247645685"}},"outputId":"bc36eecf-9f59-4ac8-cd8f-eec8026b417d"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"markdown","source":["3"],"metadata":{"id":"gZCY1-OL3KaJ"}},{"cell_type":"markdown","source":["# 提出\n","1行目の　%%writefile atcoder.py　を入れないで提出します。"],"metadata":{"id":"fR_lMPidjaDA"}},{"cell_type":"markdown","source":["# Tools"],"metadata":{"id":"XbmYDGll90Rp"}},{"cell_type":"code","source":["%%writefile tools.py\n","from collections import deque\n","import sys\n","sys.setrecursionlimit(1000000)\n","\n","def in2ilist():\n","  return list(map(int,input().split()))\n","\n","def in2ihw(_h):\n","  _A=[]\n","  for _ in range(_h):\n","    _a=list(map(int,input().split()))\n","    _A.append(_a)\n","  return _A\n","\n","def in2shw(_h):\n","  _A=[]\n","  for _ in range(_h):\n","    _a=input()\n","    _A.append(_a)\n","  return _A\n","\n","def make_edge(_n,_m,_directed=False,_margin=1):\n","  _e=[]\n","  for i in range(_n):\n","    _e.append([])\n","  for i in range(M):\n","    _u,_v = in2ilist()\n","    _e[_u-_margin].append(_v-_margin)\n","    if not _directed:\n","      _e[_v-_margin].append(_u-_margin)\n","  return _e\n","\n","def make_2d(_h,_w,_init):\n","    _a=[]\n","    for _ in range(_h):\n","        _a.append([_init]*_w)\n","    return _a\n","\n","def make_1d_none(_h):\n","    _a=[]\n","    for _ in range(_h):\n","        _a.append([])\n","    return _a\n"],"metadata":{"id":"p1jOiKpj99iz"},"execution_count":null,"outputs":[]}]}